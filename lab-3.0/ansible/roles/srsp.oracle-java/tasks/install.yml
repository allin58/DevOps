---
# file: tasks/install.yml
# Top-level installer for Oracle JDK

- name: Fetch JDK files from Oracle site
  import_tasks: fetch.yml
  when: java_download_from == "oracle"

- name: Fetch JDK files from alternative mirror
  import_tasks: fetch_mirror.yml
  when: java_download_from == "mirror"

- name: Fetch JDK file from local file system
  copy:
    src: "files/{{ jdk_file_name }}.{{ install_file_extension }}"
    dest: "{{ java_download_path }}/{{ jdk_file_name }}.{{ install_file_extension }}"
  when: java_download_from == "local"


- name: Delegate to RPM installation process
  import_tasks: use-rpm.yml
  when: use_rpm

- name: Delegate to raw tarball installation process
  import_tasks: use-tarball.yml
  when: use_tarball

- name: Delegate to Mac OS X dmg installation
  import_tasks: use-dmg.yml
  when: use_dmg

- block:
    - name: Make sure /etc/profile.d exists
      file: path=/etc/profile.d  state=directory
      become: true

    - name: export JAVA_HOME
      template:
        src: ../templates/java_home.sh.j2
        dest: /etc/profile.d/java_home.sh
        mode: "a+x"
      become: true
  when: java_set_java_home

- block:
    # No link creation is necessary on Mac OS X --
    # the package installer automatically creates symlinks in /usr/bin.
    - name: Link "{{ java_install_dir }}/{{ java_default_link_name }} on RPM based systems for JDK8"
      file:
        src: "{{ java_install_dir }}/jdk{{ jdk_version }}-amd64"
        dest: "{{ java_install_dir }}/{{ java_default_link_name }}"
        state: link
      when: java_version == 8 and use_rpm

    - name: Link "{{ java_install_dir }}/{{ java_default_link_name }} on non-RPM based systems for JDK8"
      file:
        src: "{{ java_install_dir }}/jdk{{ jdk_version }}"
        dest: "{{ java_install_dir }}/{{ java_default_link_name }}"
        state: link
      when: java_version == 8 and use_tarball

    - name: Link "{{ java_install_dir }}/{{ java_default_link_name }} on RPM based systems for JDK > 8"
      file:
        src: "{{ java_install_dir }}/jdk-{{ jdk_version }}"
        dest: "{{ java_install_dir }}/{{ java_default_link_name }}"
        state: link
      when: java_version != 8 and use_rpm

    - name: Link "{{ java_install_dir }}/{{ java_default_link_name }} on non-RPM based systems for JDK > 8"
      file:
        src: "{{ java_install_dir }}/jdk-{{ jdk_version }}"
        dest: "{{ java_install_dir }}/{{ java_default_link_name }}"
        state: link
      when: java_version != 8 and use_tarball

    - name: Alternatives link for "java"
      alternatives:
        name: java
        link: /usr/bin/java
        path: "{{ java_install_dir }}/{{ java_default_link_name }}/bin/java"

    - name: Alternatives link for "javac"
      alternatives:
        name: javac
        link: /usr/bin/javac
        path: "{{ java_install_dir }}/{{ java_default_link_name }}/bin/javac"
      # Does not work for OpenSuse, because there javac is a slave of java
      when: ansible_pkg_mgr != "zypper"

    - name: Alternatives link for "jar"
      alternatives:
        name: jar
        link: /usr/bin/jar
        path: "{{ java_install_dir }}/{{ java_default_link_name }}/bin/jar"
      # Does not work for OpenSuse, because there jar is a slave of java
      when: ansible_pkg_mgr != "zypper"

    - name: Alternatives link for "keytool"
      alternatives:
        name: keytool
        link: /usr/bin/keytool
        path: "{{ java_install_dir }}/{{ java_default_link_name }}/bin/keytool"
      # Does not work for OpenSuse, because there keytool is a slave of java
      when: ansible_pkg_mgr != "zypper"

    - name: Check if "java_sdk" target exists
      stat: path=/usr/lib/jvm/java
      register: filecheck

    - name: Alternatives link for "java_sdk"
      alternatives:
        name: java_sdk
        link: /usr/lib/jvm/java
        path: "{{ java_install_dir }}/{{ java_default_link_name }}"
      when: filecheck and filecheck.stat.exists

  become: true
  when: ansible_os_family != "Darwin"

- name: Remove temporary downloaded files, if requested
  import_tasks: delete_tmp.yml
  ignore_errors: true
  when: java_remove_download
